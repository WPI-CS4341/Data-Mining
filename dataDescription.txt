Train Data Set: trainDataSet is a set of 1000 rows containing 43 attributes each: the first 42 represent the current state of the game board, and the last represents the winner of the game.

Board State Attributes:
We assume the board is the standard 7x6 size of a normal Connect-4 grid, and that there are only two players. Each board square can either have player 1's piece in it (1), player 2's piece (2), or neither piece (0).
Given a row of board states, the full board is represented by starting from the bottom left corner, filling up the current column with the next 5 attributes, and then continuing for the next column. The final 43rd attribute is which player theoretically won that game, with 1 = player 1, and 2 = player 2. For example, if the input were:

1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43

the board would look like this:

6:  6   12  18  24  30  36  42
5:  5   11  17  23  29  35  41
4:  4   10  16  22  28  34  40
3:  3   9   15  21  27  33  39
2:  2   8   14  20  26  32  38
1:  1   7   13  19  25  31  37
    a   b   c   d   e   f   g

with 43 indicating which player won the game, one or two. You can assume a legititmate board state every time, meaning you won't have pieces floating above empty spaces or have less than 42 input attributes. You can also assume the game hasn't been won yet, so there are no 4-in-a-row connections. Additionally, assume player 1 was always the first to move.


Example: The first given input in trainDataSet:

1,0,0,0,0,0,0,0,0,0,0,0,2,1,2,0,0,0,0,0,0,0,0,0,2,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1


should be considered a board state that look like this:

6: 0 0 0 0 0 0 0
5: 0 0 0 0 0 0 0
4: 0 0 0 0 1 0 0
3: 0 0 2 0 2 0 0
2: 0 0 1 0 1 0 0
1: 1 0 2 0 2 0 0
   a b c d e f g